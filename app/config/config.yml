imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@LamaDelRayPlatformBundle/Resources/config/services.yml" }
    - { resource: "@UserBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en


framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        # naming_strategy: doctrine.orm.naming_strategy.underscore
        # entity_managers:
        #     default:
        #         mappings:
        #             ApplicationSonataUserBundle: ~
        #             SonataUserBundle: ~
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Stof\DoctrineExtensionsBundle configuration
stof_doctrine_extensions:
    orm:
        default:
            sluggable: true

fos_user:
    db_driver:      orm
    firewall_name:  main
    user_class: Application\Sonata\UserBundle\Entity\User

    group:
        group_class:    Application\Sonata\UserBundle\Entity\Group

    profile:
        form:
            type:               fos_user_profile
            handler:            fos_user.profile.form.handler.default
            name:               fos_user_profile_form
            validation_groups:  [Authentication]

sonata_user:
    security_acl: true

    manager_type: orm

    # table:
    #     user_group: "my_custom_user_group_association_table_name"

    # impersonating:
    #     route:      page_slug
    #     parameters: { path: / }

    # class:
    #     user:               Application\Sonata\UserBundle\Entity\User
    #     group:              Application\Sonata\UserBundle\Entity\Group

    # admin:
    #     user:
    #         class:          Sonata\UserBundle\Entity\UserAdmin
    #         controller:     SonataAdminBundle:CRUD


    #     group:
    #         class:          Sonata\UserBundle\Admin\Entity\GroupAdmin
    #         controller:     SonataAdminBundle:CRUD
    #         translation:    SonataUserBundle

    # profile:
    #     dashboard:
    #         groups:
    #             id:
    #                 label:              ~
    #                 label_catalogue:    ~
    #                 items:              []
    #                 item_adds:         []
    #                 roles:              []
            # blocks:
            #     type:                 ~
            #     settings:

            #         # Prototype
            #         id:                   []
            #     position:             right
        # register:
        #     form:
        #         type:               sonata_user_registration
        #         handler:            sonata.user.registration.form.handler.default
        #         name:               sonata_user_registration_form
        #         validation_groups:
        #             - Registration
        #             - Default
        #     confirm:
        #         redirect:
        #             route:              'sonata_user_profile_show'
        #             route_parameters:   ~
        # menu:
        #     - { route: 'sonata_user_profile_edit', label: 'link_edit_profile', domain: 'SonataUserBundle' }
        #     - { route: 'sonata_user_profile_edit_authentication', label: 'link_edit_authentication', domain: 'SonataUserBundle' }
        # form:
        #     type:               sonata_user_profile
        #     handler:            sonata.user.profile.form.handler.default
        #     name:               sonata_user_profile_form
        #     validation_groups:  [Profile]



# jms_serializer:
#     metadata:
#         directories:
#             - { path: %kernel.root_dir%/../vendor/sonata-project/user-bundle/Sonata/UserBundle/Resources/config/serializer/FOSUserBundle, namespace_prefix: 'FOS\UserBundle' }

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.user.block.menu:
        sonata.user.block.account:
        sonata.block.service.text:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]